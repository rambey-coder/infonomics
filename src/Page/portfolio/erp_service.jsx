import React from "react";
import { FiArrowRight, FiPlay, FiCheck, FiSmartphone } from "react-icons/fi";
import Slideshow from "./Slideshow";
const Erp_services = () => {
  const serviceSlides = [
    {
      img: "/assets/erp/purchase-order.jpg",
      title: "Service Procurement",
      url: "#service-procurement",
      msg: "Procure-to-pay processes automation using  Requisition and Purchase",
    },
    {
      img: "/assets/erp/good-received-note.jpg",
      title: "Good Receipts and Invoices",
      url: "#good-receipts",
      msg: "Good/Service receipt and invoicing processes using GRN and Invoicing modules",
    },
    {
      img: "/assets/erp/invoice-payment.jpg",
      title: "Payment Processing",
      url: "#payment-processing",
      msg: "Cashbook module with internal subledger for payment processing",
    },
    {
      img: "/assets/erp/account-comb.jpg",
      title: "General Ledger",
      url: "#general-ledger",
      msg: "General Ledger module for accounting and reporting services",
    },
  ];

  const procurementSlides = [
    {
      img: "/assets/erp/service/procurement/requisition.jpg",
      title: "Purchase Requisition",
      msg: "Raise purchase requisition (internal) for services or projects",
    },
    {
      img: "/assets/erp/service/procurement/approve-purch-order.jpg",
      title: "Approve purchase requisition",
      msg: "Multi-level requisition approval",
    },
    {
      img: "/assets/erp/service/procurement/req-to-purch-convert.jpg",
      title: "Convert Purchase requisition to Purchase order",
      msg: "Convert approved purchase requisition to purchase order, thus beginning external commitment",
    },
  ];

  const goodreceiptSlides = [
    {
      img: "/assets/erp/service/goodreceipts/receive-on-order.jpg",
      title: "Receive on Order",
      msg: "Receive stock/services on delivered order",
    },
    {
      img: "/assets/erp/service/goodreceipts/good-received-note.jpg",
      title: "Invoiced Good Receive Note (GRN)",
      msg: "Invoice is generated by selecting GRN and updating quantity to be invoiced out of received quantity",
    },
  ];

  const paymentSlides = [
    {
      img: "/assets/erp/service/payment/create-invoice.jpg",
      title: "Create and match invoice to GRN",
      msg: "Create and match invoice to GRNs - 3 ways matching before invoice is created!",
    },
    {
      img: "/assets/erp/service/payment/invoice-payment.jpg",
      title: "Create payment for approved invoice(s)",
      msg: "Create payment and matched to approved invoice(s) which had been earlier marched to GRNs - 4 ways matching!",
    },
    {
      img: "/assets/erp/service/payment/miscellaneous-payment.jpg",
      title: "Miscellaneous Payment",
      msg: "Miscellaneous Payments are direct payment requiring no invoice e.g. power bill payments",
    },
    {
      img: "/assets/erp/service/payment/miscellaneous-receipt.jpg",
      title: "Miscellaneous Receipt",
      msg: "Miscellaneous Receipts are direct receipts from donor or company outside of sales activities and transactions e.g. shareholder capital injection",
    },
  ];

  const glSlides = [
    {
      img: "/assets/erp/service/generalledger/gl-period.jpg",
      title: "Setup Periods",
      msg: "Set up account period, open and close accounting period as required",
    },
    {
      img: "/assets/erp/service/generalledger/general-ledger-entry.jpg",
      title: "Journal entry",
      msg: "Create manual journals debiting and crediting accounts as required for financial book keeping",
    },
    {
      img: "/assets/erp/service/generalledger/journal-listing.jpg",
      title: "Journal Listing",
      msg: "List of all journals including those coming from subledgers",
    },
    {
      img: "/assets/erp/service/generalledger/journalapproval.jpg",
      title: "Journal approval",
      msg: "Approve journal for it to be finally written as posted and reported as part of transactions in the GL",
    },
  ];

  return (
    <section className="!space-y-20">
      {/* Financial Modules */}
      <div
        id="financial-modules"
        className="grid md:grid-cols-2 gap-12 items-center">
        <div className="!space-y-2">
          <div className="!text-4xl flex items-center !gap-2 !text-[#FF3B30]">
            <FiSmartphone className="!mt-12 !text-4xl" />
            <span className="mt-12 font-semibold">Financial Modules</span>
          </div>
          <h2
            id="streamlined-procurement"
            className="!text-2xl !font-bold !text-[#0A2463]">
            Streamlined procurement to pay operations
          </h2>
          <p className="!text-lg !text-gray-600">
            End-to-end business solution for procurements to pay and general
            ledger processes for non-profit organisation with over N4B naira
            projects using our ERP procurement, invoicing, cashbook and general
            ledger modules.
          </p>
          <ul className="space-y-3">
            {[
              "Requisition & Purchase Order Management",
              "Multi-level approvals for orders, invoices and payments",
              "Invoicing and Payment Management",
              "General Ledger",
            ].map((item) => (
              <li key={item} className="flex items-center gap-2">
                <FiCheck className="text-[#3A86FF]" />
                {item}
              </li>
            ))}
          </ul>
          <button className="bg-[#FF3B30] !text-white !px-8 !py-3 !rounded-lg flex items-center gap-2 hover:bg-red-600 transition">
            <FiPlay /> Watch Demo
          </button>
        </div>
        <div className="bg-white p-4 rounded-2xl shadow-lg">
          <Slideshow slides={serviceSlides} />
        </div>
      </div>

      {/* Service Procurement */}
      <div
        id="service-procurement"
        className="grid md:grid-cols-2 gap-12 items-center bg-[#0A2463] !text-white !p-12 rounded-2xl">
        <div className="!space-y-2">
          <h3
            id="service-procurement-title"
            className="!text-3xl !font-bold !text-white">
            Service Procurement
          </h3>
          <p className="!text-lg !text-white !opacity-90">
            Implemented Procure-to-pay processes automation using our custom
            built ERP procurement modules consisting of Requisition and Purchase
            sub-modules with multi-levels approval workflow and signed purchase
            order documents for vendor engagement.
          </p>
          <div className="grid grid-cols-2 gap-8">
            {[
              "Better procurement processes",
              "Authorisation at different levels for controls",
              "Accounting entries from requisition using preposting",
              "Purchase Order delivery automation",
            ].map((metric) => (
              <div key={metric} className="!border-l-2 border-[#3A86FF] !pl-4">
                <p className="!text-2xl !text-white !font-bold">
                  {metric.split(" ")[0]}
                </p>
                <p className="!text-sm !text-white !opacity-80">
                  {metric.split(" ").slice(1).join(" ")}
                </p>
              </div>
            ))}
          </div>
        </div>
        <div className="!space-y-2">
          <Slideshow slides={procurementSlides} />
        </div>
      </div>

      {/* Good Receipts and Invoices */}
      <div
        id="good-receipts"
        className="grid md:grid-cols-2 gap-12 items-center bg-[#0A2463] !text-white !p-12 rounded-2xl">
        <div className="!space-y-2">
          <h3
            id="good-receipts-title"
            className="!!text-3xl !text-white  !font-bold">
            Good Receipts and Invoices
          </h3>
          <p className="!text-lg !text-white  !opacity-90">
            Implemented Good/Service receipt and invoicing processes using our
            ERP GRN and Invoicing modules to enable procurement of services and
            invoicing on delivery using 3-way matching at the point of invoicing
            i.e. Requisition matched to Purchase Order matched to GRN (Good
            Receive Note).
          </p>
          <div className="grid grid-cols-2 gap-8">
            {[
              "Seamless-GRN based on Purchase order",
              "Receipting accounting through subledger to GL",
              "3-Ways-Matching at invoicing",
              "Payables accounting through invoicing subledger to GL",
            ].map((metric) => (
              <div key={metric} className="!border-l-2 border-[#3A86FF] !pl-4">
                <p className="!text-2xl !text-white  !font-bold">
                  {metric.split(" ")[0]}
                </p>
                <p className="!text-sm !text-white  !opacity-80">
                  {metric.split(" ").slice(1).join(" ")}
                </p>
              </div>
            ))}
          </div>
        </div>
        <div className="!space-y-2">
          <Slideshow slides={goodreceiptSlides} />
        </div>
      </div>

      {/* Payment Processing */}
      <div
        id="payment-processing"
        className="grid md:grid-cols-2 gap-12 items-center bg-[#0A2463] !text-white !p-12 rounded-2xl">
        <div className="!space-y-2">
          <h3
            id="payment-processing-title"
            className="!text-3xl !font-bold !text-white">
            Payment Processing
          </h3>
          <p className="!!text-lg !text-white !opacity-90">
            Deployed our ERP cashbook module with internal subledger for payment
            processing after invoice approval.
          </p>
          <div className="grid grid-cols-2 gap-8">
            {[
              "Seamless-Payment from approved invoices",
              "4-Ways-Matching of payment to invoice to GRN to purchase and requisition orders",
              "Miscellaneous Payments and Receipts",
              "GL-bookings to directly accounts for payments in the General Ledger (GL)",
            ].map((metric) => (
              <div
                key={metric}
                className="!border-l-2 border-[#3A86FF] !pl-4 !text-white">
                <p className="!text-2xl !text-white !font-bold">
                  {metric.split(" ")[0]}
                </p>
                <p className="!text-sm !text-white  !opacity-80">
                  {metric.split(" ").slice(1).join(" ")}
                </p>
              </div>
            ))}
          </div>
        </div>
        <div className="!space-y-2">
          <Slideshow slides={paymentSlides} />
        </div>
      </div>

      {/* General Ledger */}
      <div
        id="general-ledger"
        className="grid md:grid-cols-2 gap-12 items-center bg-[#0A2463] !text-white !p-12 rounded-2xl">
        <div className="!space-y-2">
          <h3
            id="general-ledger-title"
            className="!text-3xl !text-white  !font-bold">
            General Ledger
          </h3>
          <p className="!text-lg !opacity-90 !text-white ">
            Implemented General Ledger module from our ERP solutions for
            accounting and reporting services required by the organisation.
          </p>
          <div className="grid grid-cols-2 gap-8">
            {[
              "All-subledgers are posted to the GL on completion",
              "Error-correction at subledger level provided by the GL module",
              "Manual-journal entries for extraordinary accounting entries not covered in subledgers",
              "Account-Reporting covering trial balance, balance sheets, etc",
            ].map((metric) => (
              <div key={metric} className="!border-l-2 border-[#3A86FF] !pl-4">
                <p className="!text-2xl !text-white  !font-bold">
                  {metric.split(" ")[0]}
                </p>
                <p className="!text-sm !text-white  !opacity-80">
                  {metric.split(" ").slice(1).join(" ")}
                </p>
              </div>
            ))}
          </div>
        </div>
        <div className="space-y-2">
          <Slideshow slides={glSlides} />
        </div>
      </div>
    </section>
  );
};

export default Erp_services;
